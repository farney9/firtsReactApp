{"version":3,"sources":["components/CrudSimple.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["CrudSimple","React","useState","tarea","setTarea","tareas","setTareas","modoEdicion","setModoEdicion","id","setId","error","setError","className","length","map","item","onClick","arrayFiltrado","filter","eliminarTarea","editar","noValidate","onSubmit","e","preventDefault","trim","console","log","arrayEditado","shortid","generate","htmlFor","required","type","placeholder","onChange","target","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.676b636c.chunk.js","sourcesContent":["import React from 'react'\r\nimport shortid from 'shortid'\r\n\r\nconst CrudSimple = () => {\r\n    const [tarea, setTarea] = React.useState('')\r\n    const [tareas, setTareas] = React.useState([])\r\n    const [modoEdicion, setModoEdicion] = React.useState(false)\r\n    const [id, setId] = React.useState('')\r\n    const [error, setError] = React.useState(null)\r\n\r\n    const editar = item => {\r\n        setModoEdicion(true)\r\n        setTarea(item.tarea) // tarea es la propiedad del obeto: el objeto tiene 2 propiedades: id, tarea\r\n        setId(item.id)\r\n    }\r\n\r\n    const editarTarea = e => {\r\n        e.preventDefault()\r\n        if(!tarea.trim()){\r\n          console.log('Campo vacio')\r\n          setError('El campo es obligatorio')\r\n          return\r\n        }\r\n        const arrayEditado = tareas.map(item => item.id === id ? {id, tarea} : item)\r\n        setTareas(arrayEditado)\r\n        setModoEdicion(false)\r\n        setTarea('')\r\n        setId('')\r\n        setError(null)\r\n    }\r\n\r\n    const agregarTarea = e => {\r\n        e.preventDefault()\r\n        if(!tarea.trim()){\r\n          console.log('Campo vacio')\r\n          setError('El campo es obligatorio')\r\n          return\r\n        }\r\n        setTareas([\r\n            ...tareas,\r\n            {tarea, id: shortid.generate()}\r\n        ])\r\n        setTarea('')\r\n        setError(null)\r\n      }\r\n\r\n      const eliminarTarea = id => {\r\n          const arrayFiltrado = tareas.filter(item => item.id !== id)\r\n          setTareas(arrayFiltrado)\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Crud Simple</h1>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    <h4 className=\"text-center\">Lista de Tareas</h4>\r\n                    <ul className=\"list-group\">\r\n                        {\r\n                            tareas.length === 0\r\n                            ? (\r\n                                <li className=\"list-group-item\"><strong>No hay tareas</strong></li>\r\n                            )\r\n                            : (\r\n                                tareas.map(item => (\r\n                                    <li className=\"list-group-item\" key={item.id}>\r\n                                        <span className=\"lead\">{item.tarea}</span>\r\n                                        <button \r\n                                            onClick={() => eliminarTarea(item.id)}\r\n                                            className=\"btn btn-sm btn-danger float-end mx-2\">\r\n                                                <i className=\"far fa-trash-alt\"></i> Eliminar\r\n                                        </button>\r\n                                        <button \r\n                                            onClick={ () => editar(item)}\r\n                                            className=\"btn btn-sm btn-warning float-end\">\r\n                                                <i className=\"far fa-edit\"></i> Editar\r\n                                        </button>\r\n                                    </li>\r\n                                ))\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <h4 className=\"text-center\">\r\n                        {modoEdicion ? 'Editar Tarea' : 'Agregar Tarea'}\r\n                    </h4>\r\n                    <form\r\n                        noValidate \r\n                        onSubmit={modoEdicion ? editarTarea : agregarTarea}>\r\n                        <label htmlFor=\"validationTarea\" className=\"form-label\">Tarea</label>\r\n                        <input\r\n                            required\r\n                            id=\"validationTarea\" \r\n                            type=\"text\" \r\n                            className=\"form-control mb-2\"\r\n                            placeholder=\"Ingrese Tarea\"\r\n                            onChange={e => setTarea(e.target.value)} value={ tarea}/>\r\n                        {\r\n                            error ? <div className=\"text-danger\">{error}</div> : null\r\n                            \r\n                        }\r\n                        <div className=\"d-grid gap-2\">\r\n                            {\r\n                                // operador ternario \r\n                                // ? si es verdadero\r\n                                // : si es falso\r\n\r\n                                modoEdicion \r\n                                ? (\r\n                                    <button className=\"btn btn-warning\" type=\"submit\">\r\n                                        <i className=\"fas fa-edit\"></i> Editar\r\n                                    </button>\r\n                                ) \r\n                                : (\r\n                                    <button className=\"btn btn-dark\" type=\"submit\">\r\n                                        <i className=\"fas fa-plus\"></i> Agregar\r\n                                    </button>\r\n\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </form>\r\n                </div>            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudSimple\r\n","// import Counter from \"./components/Counter.jsx\";\n// import Evento from \"./components/Evento.jsx\";\n// import Lists from \"./components/Lists.jsx\";\n// import Parrafo from \"./components/Parrafo.jsx\";\n// import Variables from \"./components/Variables.jsx\";\n// import Forms from \"./components/Forms.jsx\";\n\nimport CrudSimple from \"./components/CrudSimple.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container my-5\">\n\n        {/* llamado al componente Parrafo\n        Los Nombres de componentes se deben nombrar con may√∫scula inicial */}\n\n        {/* <Parrafo/> */}\n        {/* <Variables/> */}\n        {/* <Evento/> */}\n        {/* <Counter/> */}\n        {/* <Lists/> */}\n        {/* <Forms/> */}\n        <CrudSimple/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n// import bootstrap from \"bootstrap\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}